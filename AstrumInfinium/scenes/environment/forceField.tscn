[gd_scene load_steps=13 format=3 uid="uid://b5r7blx4aoo7g"]

[ext_resource type="Script" path="res://scenes/environment/forceField.gd" id="1_mxk2x"]
[ext_resource type="Texture2D" uid="uid://deybuyurium35" path="res://textures/flat/Marble023_4K-JPG/Marble023_4K-JPG_Color.jpg" id="2_dvhnp"]
[ext_resource type="Texture2D" uid="uid://bxi86t4tslqer" path="res://textures/flat/Marble023_4K-JPG/Marble023_4K-JPG_Displacement.jpg" id="3_lsryj"]
[ext_resource type="Texture2D" uid="uid://3orkysspv63k" path="res://textures/flat/Marble023_4K-JPG/Marble023_4K-JPG_NormalDX.jpg" id="4_bh75r"]
[ext_resource type="Texture2D" uid="uid://cpu7l4l5wprpi" path="res://textures/flat/Marble023_4K-JPG/Marble023_4K-JPG_Roughness.jpg" id="5_t6gjh"]
[ext_resource type="Texture2D" uid="uid://cf04738khmb08" path="res://textures/flat/MetalPlates017A_4K-JPG/MetalPlates017A_4K-JPG_Color.jpg" id="6_5j8ns"]

[sub_resource type="Shader" id="Shader_tt4fw"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform sampler2D texture_heightmap : hint_default_black,filter_linear_mipmap,repeat_enable;
uniform float heightmap_scale;
uniform int heightmap_min_layers;
uniform int heightmap_max_layers;
uniform vec2 heightmap_flip;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	{
		base_uv.y += sin(TIME + (base_uv.x * 100.0)) * 0.05;
		base_uv.x += TIME * 0.1;
		vec3 view_dir = normalize(normalize(-VERTEX + EYE_OFFSET) * mat3(TANGENT * heightmap_flip.x, -BINORMAL * heightmap_flip.y, NORMAL));
		float depth = 1.0 - texture(texture_heightmap, base_uv).r;
		vec2 ofs = base_uv - view_dir.xy * depth * heightmap_scale * 0.01;
		base_uv=ofs;
	}
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	ALPHA = (sin(TIME * 1.5) * 0.15) + 0.45;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ijbvw"]
render_priority = 0
shader = SubResource("Shader_tt4fw")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/normal_scale = 6.0
shader_parameter/heightmap_scale = 5.0
shader_parameter/heightmap_min_layers = 8
shader_parameter/heightmap_max_layers = 32
shader_parameter/heightmap_flip = Vector2(1, 1)
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("2_dvhnp")
shader_parameter/texture_metallic = ExtResource("3_lsryj")
shader_parameter/texture_roughness = ExtResource("5_t6gjh")
shader_parameter/texture_normal = ExtResource("4_bh75r")

[sub_resource type="PlaneMesh" id="PlaneMesh_alfe6"]
material = SubResource("ShaderMaterial_ijbvw")
size = Vector2(3, 3)

[sub_resource type="BoxShape3D" id="BoxShape3D_ivf0v"]
size = Vector3(3, 0.2, 3)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_dau8t"]
albedo_texture = ExtResource("6_5j8ns")

[sub_resource type="SphereMesh" id="SphereMesh_tipke"]
material = SubResource("StandardMaterial3D_dau8t")

[node name="ForceField" type="StaticBody3D"]
collision_layer = 3
collision_mask = 3
script = ExtResource("1_mxk2x")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_alfe6")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(-1, 8.74228e-08, 0, -8.74228e-08, -1, 0, 0, 0, 1, 0, -0.2, 0)
mesh = SubResource("PlaneMesh_alfe6")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.1, 0)
shape = SubResource("BoxShape3D_ivf0v")

[node name="opacityReferenceObject" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -5, 0)
mesh = SubResource("SphereMesh_tipke")
